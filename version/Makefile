# project info
PROJ_PATH := $(shell dirname $(abspath $(lastword $(MAKEFILE_LIST))))
APP_NAME := $(shell echo ${PROJ_PATH} | sed 's/^\(.*\)[/]//')
# build info
GO_ARCH ?= $(shell go env GOARCH)
GO_OS ?= $(shell go env GOOS)
VERSION := "1.0.0"
COMMIT_ID := $(shell git rev-parse HEAD 2>/dev/null)
BUILD_TIME := $(shell date "+%Y-%m-%d %H:%M:%S")
GO_VERSION := $(shell go version)
GO_SHORT_VERSION := $(shell go version | awk '{print $$3}')
VERSION_PKG := github.com/recallsong/go-utils/version
VERSION_OPS := -ldflags "\
		-X '${VERSION_PKG}.Version=${VERSION}' \
		-X '${VERSION_PKG}.BuildTime=${BUILD_TIME}' \
        -X '${VERSION_PKG}.CommitID=${COMMIT_ID}' \
        -X '${VERSION_PKG}.GoVersion=${GO_VERSION}'"

.PHONY: version clean

build: version
	go build ${VERSION_OPS} -o "${PROJ_PATH}/${APP_NAME}"

cross-build: version
	CGO_ENABLED=0 GOOS=${GO_OS} GOARCH=${GO_ARCH} go build ${VERSION_OPS} -o "${PROJ_PATH}/bin/${GO_OS}-${GO_ARCH}-${APP_NAME}"

version:
	@echo ------------------------
	@echo AppName: ${APP_NAME}
	@echo Arch: ${GO_ARCH}
	@echo OS: ${GO_OS}
	@echo Version: ${VERSION}
	@echo BuildTime: ${BUILD_TIME}
	@echo GoVersion: ${GO_VERSION}
	@echo CommitID: ${COMMIT_ID}
	@echo ------------------------

clean:
	rm -f "${PROJ_PATH}/${APP_NAME}"
	rm -rf "${PROJ_PATH}/bin"
